Top Built-in Modules
	24	What are the top five built-in modules commonly used in Node projects?

	fs – File System operations
	path – Handling file and directory paths
	http – Creating web servers
	os – Accessing system information
	events – Handling event-driven programming

	25	Explain the role of the fs module. Name some functions of it.

	The fs (File System) module is used to handle file operations in Node.js.
	It allows reading, writing, updating, and deleting files.
	Common functions: fs.readFile(), fs.writeFile(), fs.appendFile(), fs.unlink().
	Both synchronous and asynchronous versions exist.

	26	Explain the role of the path module. Name some functions of it.

	The path module helps work with file and directory paths.
	It ensures cross-platform path handling.
	Common functions: path.join(), path.resolve(), path.basename(), path.extname().
	It prevents manual string concatenation for file paths.

	27	Explain the role of the OS module. Name some functions of it.

	The os module provides information about the operating system.
	It helps developers get system details like memory, CPU, and hostname.
	Common functions: os.type(), os.platform(), os.totalmem(), os.freemem().
	Useful for system monitoring or environment-based configurations.

	28	Explain the role of the events module. How to handle events in Node?

	The events module enables event-driven programming in Node.js.
	It provides the EventEmitter class to create and handle custom events.
	You can emit events using .emit() and listen using .on().
	Example: emitter.on('start', () => console.log('Started')).

	29	What are event arguments?

	Event arguments are data passed when an event is emitted.
	They allow sharing information with event listeners.
	Example: emitter.emit('data', 'Hello') → listener receives 'Hello'.
	Useful for customizing event handling.

	30	What is the difference between a function and an event?

	A function is called directly by code, executing immediately.
	An event is triggered (emitted) and handled asynchronously by listeners.
	Functions are synchronous (by default), while events are reactive.
	Events promote loose coupling and asynchronous flow.

	31	What is the role of the HTTP module in Node?

	The http module allows Node.js to create web servers and handle HTTP requests/responses.
	It helps build APIs and serve web pages.
	Provides methods for both client and server creation.
	Common methods: http.createServer(), http.get(), http.request().

	32	What is the role of the createServer method of the HTTP module?

	http.createServer() creates an HTTP server in Node.js.
	It listens for client requests and sends back responses.
	The callback function handles request and response objects.
	Example: http.createServer((req, res) => res.end('Hello World')).listen(3000).