5. What are the seven main features of Node.js?
Main features:

Asynchronous & Event-driven
Single-threaded but highly scalable
Fast execution using V8 engine
Non-blocking I/O model
Cross-platform support
Large NPM ecosystem
Built-in libraries for networking and file system

6. What is single-threaded programming?

Single-threaded programming means the program runs on one main thread, 
handling one operation at a time — but in Node.js, async callbacks 
let it manage many tasks efficiently on that single thread.

7. What is synchronous programming?

Synchronous programming executes tasks one after another, blocking the next task until the current one finishes.

8. What is multi-threaded programming?

Multi-threaded programming uses multiple threads to perform multiple tasks simultaneously,
improving performance for CPU-heavy operations.

9. What is asynchronous programming?

Asynchronous programming allows tasks to run without waiting for others to complete — 
improving speed and responsiveness.

10. What is the difference between synchronous and asynchronous programming?
Synchronous     -----------------------	Asynchronous
Executes one task at a time.	        Executes multiple tasks without blocking.
Slower for I/O operations.	            Faster and non-blocking.
Example: reading file directly.	        Example: reading file with callback or promise.

11. What are events, event emitter, event queue, event loop, and event-driven in Node.js?
Term	        Meaning
Events-	        Actions or signals that trigger functions (like “connection” or “data”).
EventEmitter-	Node module that allows creating and handling custom events.
Event Queue-	Stores pending callbacks waiting to be executed.
Event Loop-	    Continuously checks the event queue and executes callbacks.
Event-driven-	Programming model where code reacts to events instead of running linearly.

12. What are the main features and advantages of Node.js?

Main features: Non-blocking I/O, single-threaded, fast execution, event-driven.
Advantages:

High performance for I/O operations
Scalable and lightweight
Same language (JavaScript) on both client and server
Large community and NPM support

13. What are the disadvantages of Node.js? When to use or not use it?

Disadvantages:
Not ideal for CPU-intensive tasks
Callback hell (though improved with promises/async-await)
Single-threaded may limit performance for heavy computations